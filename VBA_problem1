Option Explicit
Option Base 1

Sub Production(ByRef I_X As Long, ByRef I_Y As Long, ByRef I_Z As Long, ByRef I_P As Long, ByRef I_Q As Long)
    Dim bSizeX As Integer
    Dim bSizeY As Integer
    Dim bSizeZ As Integer
    Dim bSizeP As Integer 'Batch size of Pois
    Dim bSizeQ As Integer
    Dim SetupTimePQ(2) As Integer
    Dim UnitTimePQ(2) As Integer
    Dim SetupTime As Integer
    Dim UnitTime(3) As Integer
    Dim team1 As Integer 'initially set to 0, else taking values 1,2,3, where 1 = X, 2 = Y, 3 = Z
    Dim team2 As Integer
    Dim currentProduct As Integer 'initially set to 0, then 1 or 2, indicating Pois or Qads
    Dim time As Integer
    
'    'A simplyfying assumption is made, which divides the available work time equally _
'    between production (pTime) and assembly (aTime)
'    Dim pTime As Integer
'    Dim aTime As Integer
'    pTime = 1950 '1,950 minutes of work time assigned to production of components
'    aTime = 1950 '1,950 minutes of work time assigned to assembly of products
    
    SetupTimePQ(1) = 20 'setup time for Pois
    SetupTimePQ(2) = 25 'setup time for Qads
    UnitTimePQ(1) = 9 'unit time for Pois
    UnitTimePQ(2) = 12 'unit time dor Qads
    
    SetupTime = 15
    UnitTime(1) = 3 'unit time for X
    UnitTime(2) = 2 'unit time dor Y
    UnitTime(3) = 6 'unit time for Z
    
    bSizeX = 600
    bSizeY = 490
    bSizeZ = 160
    bSizeP = 65
    bSizeQ = 90
    
    currentProduct = 0
    team1 = 0
    team2 = 0
    
    time = 3900
    
    'Starting loop, while there is time to produce at least one batch of components _
    or assemble one batch of products
    While time >= (((bSizeX * UnitTime(1)) + SetupTime) Or ((bSizeY * UnitTime(2)) + SetupTime) Or _
    ((bSizeZ * UnitTime(3)) + SetupTime)) Or time >= ((bSizeP * UnitTimePQ(1)) + SetupTimePQ(1)) _
    Or time >= ((bSizeQ * UnitTimePQ(2)) + SetupTimePQ(2))
        
        If time >= ((bSizeP * UnitTimePQ(1)) + SetupTimePQ(1)) Or time >= ((bSizeQ * UnitTimePQ(2)) + SetupTimePQ(2)) Then
            If (currentProduct = 0 Or currentProduct = 2) And time >= ((bSizeP * UnitTimePQ(1)) + SetupTimePQ(1)) _
            And ((I_X >= (5 * bSizeP)) And (I_Y >= (2 * bSizeP)) And (I_Z >= bSizeP)) Then 'enough time and components to produce Pios
                currentProduct = 1
                'nBatchP = nBatchP + 1
                I_P = I_P + bSizeP
                I_X = I_X - (5 * bSizeP)
                I_Y = I_Y - (2 * bSizeP)
                I_Z = I_Z - bSizeP
                time = time - ((bSizeP * UnitTimePQ(1)) + SetupTimePQ(1))
            ElseIf currentProduct = 1 And time >= ((bSizeQ * UnitTimePQ(2)) + SetupTimePQ(2)) _
            And ((I_X >= (3 * bSizeQ)) And (I_Y >= (4 * bSizeQ)) And (I_Z >= bSizeQ)) Then 'enough time and components to produce Qads
                currentProduct = 2
                'nBatchQ = nBatchQ + 1
                I_Q = I_Q + bSizeQ
                I_X = I_X - (3 * bSizeQ)
                I_Y = I_Y - (4 * bSizeQ)
                I_Z = I_Z - bSizeQ
                time = time - ((bSizeQ * UnitTimePQ(2)) + SetupTimePQ(2))
            Else
                While time >= (((bSizeX * UnitTime(1)) + SetupTime) Or _
                time >= ((bSizeY * UnitTime(2)) + SetupTime) Or time >= ((bSizeZ * UnitTime(3)) + SetupTime))
                    If team1 = 0 Or team1 = 3 And time >= (((bSizeX * UnitTime(1)) + SetupTime)) Then
                        I_X = I_X + bSizeX
                        time = time - ((bSizeX * UnitTime(1)) + SetupTime)
                        team1 = 1
                    ElseIf team2 = 0 And ((bSizeY * UnitTime(2)) + SetupTime) Then
                        I_Y = I_Y + bSizeY
                        time = time - ((bSizeY * UnitTime(2)) + SetupTime)
                        team2 = 2
                    ElseIf team1 = 1 And ((bSizeY * UnitTime(2)) + SetupTime) Then
                        I_Y = I_Y + bSizeY
                        time = time - ((bSizeY * UnitTime(2)) + SetupTime)
                        team1 = 2
                    ElseIf team2 = 1 And ((bSizeY * UnitTime(2)) + SetupTime) Then
                        I_Y = I_Y + bSizeY
                        time = time - ((bSizeY * UnitTime(2)) + SetupTime)
                        team2 = 2
                    ElseIf team1 = 2 And ((bSizeZ * UnitTime(3)) + SetupTime) Then
                        I_Z = I_Z + bSizeY
                        time = time - ((bSizeZ * UnitTime(3)) + SetupTime)
                        team1 = 3
                    ElseIf team2 = 2 And ((bSizeZ * UnitTime(3)) + SetupTime) Then
                        I_Z = I_Z + bSizeY
                        time = time - ((bSizeZ * UnitTime(3)) + SetupTime)
                        team2 = 3
                    ElseIf team2 = 3 And ((bSizeX * UnitTime(1)) + SetupTime) Then
                        I_X = I_X + bSizeX
                        time = time - ((bSizeX * UnitTime(1)) + SetupTime)
                        team2 = 1
                    End If
                Wend
            
            End If
        End If
    Wend
    
End Sub


Sub ProductionSimulation_1()
    Dim w As Worksheet
    Dim I_X As Long
    Dim I_Y As Long
    Dim I_Z As Long
    Dim I_P As Long
    Dim I_Q As Long
    Dim k As Integer
    Dim time As Integer 'Available weekly work time in minutes
    Dim i As Integer
    Dim j As Integer
    Dim m As Integer
    Dim n As Integer
    Dim DemandP() As Integer
    Dim DemandQ() As Integer
    Dim InvPois() As Integer
    Dim InvQads() As Integer
    Dim InvX() As Integer
    
    'Generate demand
    
    k = InputBox("How many weeks should production be simulated for?", "Number of weeks", 500)


    ReDim DemandP(k) 'redimension demand arrays to fit the number of weeks, k
    ReDim DemandQ(k)

    Randomize

    For i = 1 To k 'populate the arrays with randomly generated demand
        DemandP(i) = WorksheetFunction.RandBetween(100, 160)
        DemandQ(i) = Int(WorksheetFunction.NormInv(Rnd(), 180, 20))
    Next
    
    ReDim InvPois(k)
    ReDim InvQads(k)
    ReDim InvX(k)
    
    For j = 1 To k
        I_X = 600
        I_Y = 500
        I_Z = 330
        I_P = 80
        I_Q = 200
        Call Production(I_X, I_Y, I_Z, I_P, I_Q)
        InvPois(j) = I_P
        InvQads(j) = I_Q
        InvX(j) = I_X
    Next
    Cells(36, 1) = WorksheetFunction.Average(InvPois)
    
    For m = 1 To k
        Cells(m + 19, 1) = DemandP(m)
        Cells(m + 19, 2) = InvPois(m)
        Cells(m + 19, 3) = DemandQ(m)
        Cells(m + 19, 4) = InvQads(m)
        Cells(m + 19, 5) = InvX(m)
        
    Next
    
    
    'compare demand with inventory for each week --- maybe do results in separate sub?
    'call demand arrays from demand sub as ByVal?

End Sub
